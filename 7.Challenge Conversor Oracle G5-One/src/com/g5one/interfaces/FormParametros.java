package com.g5one.interfaces;

import com.g5one.conversor.Distancia;
import com.g5one.conversor.Masa;
import com.g5one.conversor.Memoria;
import com.g5one.conversor.Temperatura;
import com.g5one.conversor.Tiempo;
import javax.swing.JOptionPane;

/**
 *
 * @author Moises Romero
 */
public class FormParametros extends javax.swing.JInternalFrame {

    public static String QuienLlama = "";

    /**
     * Creates new form FormParametros
     */
    public FormParametros() {
        initComponents();
        switch (QuienLlama) {
            case "DISTANCIA":
                this.lblUnidadMedida.setText("Metros");
                this.cmbUnidadMedida.removeAllItems();
                this.cmbUnidadMedida.addItem("Seleccione una Opcion");
                this.cmbUnidadMedida.addItem("Centimetros");
                this.cmbUnidadMedida.addItem("Kilometros");
                this.cmbUnidadMedida.addItem("Millas");
                this.cmbUnidadMedida.addItem("Pies");
                break;
            case "MEMORIA":
                this.lblUnidadMedida.setText("Bits");
                this.cmbUnidadMedida.removeAllItems();
                this.cmbUnidadMedida.addItem("Seleccione una Opcion");
                this.cmbUnidadMedida.addItem("KB");
                this.cmbUnidadMedida.addItem("MB");
                this.cmbUnidadMedida.addItem("GB");
                break;
            case "MASA":
                this.lblUnidadMedida.setText("Libras");
                this.cmbUnidadMedida.removeAllItems();
                this.cmbUnidadMedida.addItem("Seleccione una Opcion");
                this.cmbUnidadMedida.addItem("Miligramos");
                this.cmbUnidadMedida.addItem("Gramos");
                this.cmbUnidadMedida.addItem("Kilogramos");
                this.cmbUnidadMedida.addItem("Toneladas");
                break;
            case "TEMPERATURA":
                this.lblUnidadMedida.setText("Grados Kelvin");
                this.cmbUnidadMedida.removeAllItems();
                this.cmbUnidadMedida.addItem("Seleccione una Opcion");
                this.cmbUnidadMedida.addItem("Grados Celsius");
                this.cmbUnidadMedida.addItem("Grados Fahrenheit");
                break;
            case "TIEMPO":
                this.lblUnidadMedida.setText("Segundos");
                this.cmbUnidadMedida.removeAllItems();
                this.cmbUnidadMedida.addItem("Seleccione una Opcion");
                this.cmbUnidadMedida.addItem("Minutos");
                this.cmbUnidadMedida.addItem("Horas");
                this.cmbUnidadMedida.addItem("Dias");
                this.cmbUnidadMedida.addItem("Semana");
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMontoConvertir = new javax.swing.JTextField();
        lblUnidadMedida = new javax.swing.JLabel();
        cmbUnidadMedida = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtMontoConvertido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);

        txtMontoConvertir.setText("0.00");

        lblUnidadMedida.setText("Unidad de Medida");

        cmbUnidadMedida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        jLabel2.setText("Valor a Convertir");

        jLabel3.setText("Convertir A");

        jButton1.setText("Convertir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtMontoConvertido.setEditable(false);
        txtMontoConvertido.setText("0.00");

        jLabel4.setText("Es Igual A ===");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMontoConvertido, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbUnidadMedida, javax.swing.GroupLayout.Alignment.LEADING, 0, 176, Short.MAX_VALUE)
                            .addComponent(txtMontoConvertir, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addComponent(lblUnidadMedida)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMontoConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUnidadMedida)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMontoConvertido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jButton1)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //1.Validamos Valor a convertir Mayor a 0
        double montoConvertir = Double.parseDouble(this.txtMontoConvertir.getText());
        double valorConvertido = 0;
        if (montoConvertir == 0) {
            JOptionPane.showMessageDialog(null, "El Valor a convertir debe ser mayor a 0", "VALIDACION", JOptionPane.WARNING_MESSAGE);
            this.txtMontoConvertir.requestFocus();
        } else if (this.cmbUnidadMedida.getSelectedIndex() == 0) {
            //2.Validamos que haya seleccionao una opcion a convertir.
            JOptionPane.showMessageDialog(null, "Favor Seleccionar Unidad a Convertir", "VERIFICAR", JOptionPane.WARNING_MESSAGE);
            this.cmbUnidadMedida.requestFocus();
        } else {
            //3.Depende de la opcion seleccionada hacemos la conversion.
            try {
                switch (QuienLlama) {
                    case "DISTANCIA":
                        System.out.println("Distancia Seleccionada: " + this.cmbUnidadMedida.getSelectedItem().toString());
                        valorConvertido = new Distancia().Distancia(montoConvertir, this.cmbUnidadMedida.getSelectedItem().toString());
                        this.txtMontoConvertido.setText(String.valueOf(valorConvertido));
                        break;
                    case "MEMORIA":
                        System.out.println("Memoria Seleccionada: " + this.cmbUnidadMedida.getSelectedItem().toString());
                        valorConvertido = new Memoria().Memoria(montoConvertir, this.cmbUnidadMedida.getSelectedItem().toString());
                        this.txtMontoConvertido.setText(String.valueOf(valorConvertido));
                        break;
                    case "MASA":
                        System.out.println("Masa Seleccionada: " + this.cmbUnidadMedida.getSelectedItem().toString());
                        valorConvertido = new Masa().Masa(montoConvertir, this.cmbUnidadMedida.getSelectedItem().toString());
                        this.txtMontoConvertido.setText(String.valueOf(valorConvertido));
                        break;
                    case "TEMPERATURA":
                        System.out.println("Tenperatura Seleccionada: " + this.cmbUnidadMedida.getSelectedItem().toString());
                        valorConvertido = new Temperatura().Temperatura(montoConvertir, this.cmbUnidadMedida.getSelectedItem().toString());
                        this.txtMontoConvertido.setText(String.valueOf(valorConvertido));
                        break;
                    case "TIEMPO":
                        System.out.println("Tiempo Seleccionada: " + this.cmbUnidadMedida.getSelectedItem().toString());
                        valorConvertido = new Tiempo().Tiempo(montoConvertir, this.cmbUnidadMedida.getSelectedItem().toString());
                        this.txtMontoConvertido.setText(String.valueOf(valorConvertido));
                        break;
                }
            } catch (Exception e) {
                System.out.println("Error; " + e.getMessage());
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbUnidadMedida;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblUnidadMedida;
    private javax.swing.JTextField txtMontoConvertido;
    private javax.swing.JTextField txtMontoConvertir;
    // End of variables declaration//GEN-END:variables
}
